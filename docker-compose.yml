version: "3.9"

x-common-variables: &common-variables
  DB_PASSWORD: ${DB_PASSWORD}
  DB_USER: ${DB_USER}
  DB_NAME: ${DB_NAME}
  DB_HOST: postgres
  SECRET_KEY: ${SECRET_KEY}
  DEBUG: ${DEBUG}

services:

#  fixtures:
#    build:
#      context: .
#    environment:
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
#      POSTGRES_HOST: postgres
#    depends_on:
#      migrations:
#        condition: service_completed_successfully
#    command: bash load_fixtures.sh

  front:
#    image: sermalenk/skypro-front:version_1
#    image: sermalenk/skypro-front:base
#    image: sermalenk/skypro-front:lesson_35
#    image: sermalenk/skypro-front:lesson_36
#    image: sermalenk/skypro-front:lesson_37
    image: sermalenk/skypro-front:lesson_38
    ports:
      - '8080:80'
    restart: always
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - ./nginx/:/etc/nginx/conf.d/

  api:
    build:
      context: .
    volumes:
      - .:/code
    environment: *common-variables
#      <<: *common-variables
#      DB_HOST: postgres
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate
            python3 manage.py runserver 0.0.0.0:8000"
    healthcheck:
      test: curl -sS http://127.0.0.1:8000/health/ || exit 1
      interval: 15s
      timeout: 5s
      retries: 5

#    volumes:
#      - api_media:/opt/app/media

  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres-data/db/:/var/lib/postgresql/data

#volumes:
#  api_media: