version: "3.9"

x-common-variables: &common-variables
  DB_PASSWORD: postgres
  DB_USER: postgres
  DB_NAME: postgres
  DB_HOST: postgres
  SECRET_KEY: 'testing-secret-key'
  DEBUG: 'TRUE'
  SOCIAL_AUTH_VK_OAUTH2_KEY: 'testing-key'
  SOCIAL_AUTH_VK_OAUTH2_SECRET: 'testing-secret'
  NO_FRONT: 'TRUE'
  BOT_TOKEN: ${BOT_TOKEN}

services:

  api:
    build:
      context: .
    volumes:
      - .:/code
    environment: *common-variables
    restart: always
    ports:
      - '8000:8000'
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "python3 manage.py runserver 0.0.0.0:8000"
    healthcheck:
      test: curl -sS http://127.0.0.1:8000/health/ || exit 1
      interval: 15s
      timeout: 5s
      retries: 5

  bot:
    build:
      context: .
    environment: *common-variables
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    command: >
      sh -c "python3 manage.py runbot"

  migrations:
    build:
      context: .
    environment: *common-variables
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "python3 manage.py migrate"

  postgres:
    image: postgres:12.4-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  postgres-data:
