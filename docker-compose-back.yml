version: "3.9"

x-common-variables: &common-variables
  DB_PASSWORD: ${DB_PASSWORD}
  DB_USER: ${DB_USER}
  DB_NAME: ${DB_NAME}
  DB_HOST: postgres
  SECRET_KEY: ${SECRET_KEY}
  DEBUG: ${DEBUG}
  NO_FRONT: 'TRUE'
  BOT_TOKEN: ${BOT_TOKEN}

services:

  api:
    build:
      context: .
    volumes:
      - .:/code
    environment: *common-variables
    ports:
      - '8000:8000'
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    command: >
      sh -c "python3 manage.py runserver 0.0.0.0:8000"

  bot:
    build:
      context: .
    volumes:
      - .:/code
    environment: *common-variables
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    command: >
      sh -c "python manage.py runbot"

  migrations:
    build:
      context: .
    volumes:
      - .:/code
    environment: *common-variables
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate"

  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres-data/db/:/var/lib/postgresql/data
