name: "Build action"
on: [push]

jobs:

  build_and_push:
    runs-on: ubuntu-latest
    steps:
    - name: clone code
      uses: actions/checkout@v2
    - name: set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8
    - name: linting
      run: |
        flake8 core todolist --max-line-length=120
#    - name: run tests
#      run: |
#        coverage run --source=app -m pytest -v tests
#        coverage report --show-missing

#    - name: upload coverage to codecov
#      uses: codecov/codecov-action@v1

#    - name: docker build
#      run: docker build -t ipotemkin/movies_skypro_app:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
#    - name: docker login
#      run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ipotemkin --password-stdin
#    - name: docker push
#      run: docker push ipotemkin/movies_skypro_app:$GITHUB_REF_NAME-$GITHUB_RUN_ID

#  deploy:
#    runs-on: ubuntu-latest
#    needs: build_and_push
#    env:
#      PWD_HASH_SALT: ${{ secrets.PWD_HASH_SALT }}
#      JWT_KEY: ${{ secrets.JWT_KEY }}
##      REDIS_HOST: redis
#    steps:
#      - name: clone code
#        uses: actions/checkout@v2
#      - name: render configs
#        run: |
#          mkdir deploy
#          cat docker-compose-server.yaml | envsubst > deploy/docker-compose.yaml
##          cat prod_config.py | env_subst > deploy/docker_config.py
#      - name: clone config
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.HOST }}
#
##          TODO to change to token
#          username: ${{ secrets.SSH_USERNAME }}
#          password: ${{ secrets.SSH_PASSWORD }}
#
#          source: "deploy/docker-compose.yaml"
#          target: movies-api
#          strip_components: 1
#      - name: run docker-compose
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          script: |
#            cd movies-api
#            docker-compose down
#            echo ${{ secrets.SSH_PASSWORD }} | sudo -S docker-compose up -d
