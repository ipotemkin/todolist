version: "2.1"

services:

  front:
    #    image: sermalenk/skypro-front:version_1
    image: sermalenk/skypro-front:base
    ports:
      - '8002:80'
    depends_on:
      - api

  api:
    image: ipotemkin/todolist_api:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment:
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USER: ${DB_USER}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      SECRET_KEY: ${SECRET_KEY}
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
#      migrations:
#        condition: service_completed_successfully
    command: >
      sh -c "python3 manage.py migrate &&
            python3 manage.py runserver 0.0.0.0:8000"

#  migrations:
#    image: ipotemkin/todolist_api:$GITHUB_REF_NAME-$GITHUB_RUN_ID
#    environment:
#      DB_PASSWORD: ${DB_PASSWORD}
#      DB_USER: ${DB_USER}
#      DB_NAME: ${DB_NAME}
#      DB_HOST: ${DB_HOST}
#      SECRET_KEY: ${SECRET_KEY}
#    restart: always
#    command: python manage.py migrate

  postgres:
    image: postgres:12.4-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./postgres-data/db/:/var/lib/postgresql/data
